{
    "sourceFile": "src/main/java/io/sfer/xxx/Controller/HomeController.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1651746433274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1651746439097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \tpublic String getAllProduct() {\r\n \t\tHttpClient clientCategory = HttpClient.newHttpClient();\r\n \t\tHttpRequest requestCategory = HttpRequest\r\n \t\t\t.newBuilder()\r\n-\t\t\t.uri(URI.create(\"http://localhost:8080/apis/produ\"))\r\n+\t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/\"))\r\n \t\t\t.build();\r\n \t\tHttpResponse<String> response = clientCategory.send(\r\n \t\t\trequestCategory,\r\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n"
                },
                {
                    "date": 1651746446974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \tpublic String getAllProduct() {\r\n \t\tHttpClient clientCategory = HttpClient.newHttpClient();\r\n \t\tHttpRequest requestCategory = HttpRequest\r\n \t\t\t.newBuilder()\r\n-\t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/\"))\r\n+\t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/available\"))\r\n \t\t\t.build();\r\n \t\tHttpResponse<String> response = clientCategory.send(\r\n \t\t\trequestCategory,\r\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n"
                },
                {
                    "date": 1651746460172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,22 +40,22 @@\n \t\treturn \"public/index\";\r\n \t}\r\n \t@GetMapping(\"/category\")\r\n \tpublic String getAllProduct() {\r\n-\t\tHttpClient clientCategory = HttpClient.newHttpClient();\r\n-\t\tHttpRequest requestCategory = HttpRequest\r\n+\t\tHttpClient clientProduct = HttpClient.newHttpClient();\r\n+\t\tHttpRequest requestProduct = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/available\"))\r\n \t\t\t.build();\r\n-\t\tHttpResponse<String> response = clientCategory.send(\r\n-\t\t\trequestCategory,\r\n+\t\tHttpResponse<String> response = clientProduct.send(\r\n+\t\t\trequestProduct,\r\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n \t\tString jsonStr = response.body();\r\n \t\tObjectMapper objectMapper = new ObjectMapper();\r\n-\t\tList<Category> categoryList = objectMapper.readValue(\r\n+\t\tList<Product> categoryList = objectMapper.readValue(\r\n \t\t\tjsonStr,\r\n-\t\t\tnew TypeReference<List<Category>>() {}\r\n+\t\t\tnew TypeReference<List<Product>>() {}\r\n \t\t);\r\n \t\tSystem.out.println(categoryList);\r\n \t\tmodel.addAttribute(\"categoryList\", categoryList);\r\n \t\treturn \"public/productList\";\r\n"
                },
                {
                    "date": 1651746524726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import com.fasterxml.jackson.core.JsonProcessingException;\r\n import com.fasterxml.jackson.core.type.TypeReference;\r\n import com.fasterxml.jackson.databind.ObjectMapper;\r\n import io.sfer.xxx.Model.Category;\r\n+import io.sfer.xxx.Model.Product;\r\n import org.springframework.stereotype.Controller;\r\n import org.springframework.ui.Model;\r\n import org.springframework.web.bind.annotation.GetMapping;\r\n import org.springframework.web.bind.annotation.PathVariable;\r\n@@ -39,9 +40,9 @@\n \t\tmodel.addAttribute(\"categoryList\", categoryList);\r\n \t\treturn \"public/index\";\r\n \t}\r\n \t@GetMapping(\"/category\")\r\n-\tpublic String getAllProduct() {\r\n+\tpublic String getAllProduct(Model model) throws IOException, InterruptedException, JsonProcessingException {\r\n \t\tHttpClient clientProduct = HttpClient.newHttpClient();\r\n \t\tHttpRequest requestProduct = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/available\"))\r\n@@ -51,14 +52,14 @@\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n \t\tString jsonStr = response.body();\r\n \t\tObjectMapper objectMapper = new ObjectMapper();\r\n-\t\tList<Product> categoryList = objectMapper.readValue(\r\n+\t\tList<Product> productList = objectMapper.readValue(\r\n \t\t\tjsonStr,\r\n \t\t\tnew TypeReference<List<Product>>() {}\r\n \t\t);\r\n-\t\tSystem.out.println(categoryList);\r\n-\t\tmodel.addAttribute(\"categoryList\", categoryList);\r\n+\t\tSystem.out.println(productList);\r\n+\t\tmodel.addAttribute(\"productList\", productList);\r\n \t\treturn \"public/productList\";\r\n \t}\r\n \t@GetMapping(\"/category/{code}/{id}\")\r\n \tpublic String getProductByCategory(@PathVariable String code, @PathVariable Integer id) {\r\n"
                },
                {
                    "date": 1651748143064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,24 +42,59 @@\n \t}\r\n \t@GetMapping(\"/category\")\r\n \tpublic String getAllProduct(Model model) throws IOException, InterruptedException, JsonProcessingException {\r\n \t\tHttpClient clientProduct = HttpClient.newHttpClient();\r\n+\t\tHttpClient clientCategory = HttpClient.newHttpClient();\r\n+\t\tHttpRequest requestCategory = HttpRequest\r\n+\t\t\t.newBuilder()\r\n+\t\t\t.uri(URI.create(\"http://localhost:8080/apis/categories\"))\r\n+\t\t\t.build();\r\n+\t\tHttpResponse<String> responseCategory = clientCategory.send(\r\n+\t\t\trequestCategory,\r\n+\t\t\tHttpResponse.BodyHandlers.ofString()\r\n+\t\t);\r\n+\t\tString jsonStrCategory = responseCategory.body();\r\n+\t\tObjectMapper objectMapperCategory = new ObjectMapper();\r\n+\t\tList<Category> categoryList = objectMapperCategory.readValue(\r\n+\t\t\tjsonStrCategory,\r\n+\t\t\tnew TypeReference<List<Category>>() {}\r\n+\t\t);\r\n+\t\tSystem.out.println(categoryList);\r\n+\t\tmodel.addAttribute(\"categoryList\", categoryList);\r\n+\t\t\r\n \t\tHttpRequest requestProduct = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/available\"))\r\n \t\t\t.build();\r\n-\t\tHttpResponse<String> response = clientProduct.send(\r\n+\t\tHttpResponse<String> responseProduct = clientProduct.send(\r\n \t\t\trequestProduct,\r\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n-\t\tString jsonStr = response.body();\r\n-\t\tObjectMapper objectMapper = new ObjectMapper();\r\n-\t\tList<Product> productList = objectMapper.readValue(\r\n-\t\t\tjsonStr,\r\n+\t\tString jsonStrProduct = responseProduct.body();\r\n+\t\tObjectMapper objectMapperProduct = new ObjectMapper();\r\n+\t\tList<Product> productList = objectMapperProduct.readValue(\r\n+\t\t\tjsonStrProduct,\r\n \t\t\tnew TypeReference<List<Product>>() {}\r\n \t\t);\r\n \t\tSystem.out.println(productList);\r\n \t\tmodel.addAttribute(\"productList\", productList);\r\n+\t\t\r\n+\t\tHttpRequest requestProduct = HttpRequest\r\n+\t\t\t.newBuilder()\r\n+\t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/publisher\"))\r\n+\t\t\t.build();\r\n+\t\tHttpResponse<String> responseProduct = clientProduct.send(\r\n+\t\t\trequestProduct,\r\n+\t\t\tHttpResponse.BodyHandlers.ofString()\r\n+\t\t);\r\n+\t\tString jsonStrProduct = responseProduct.body();\r\n+\t\tObjectMapper objectMapperProduct = new ObjectMapper();\r\n+\t\tList<Product> productList = objectMapperProduct.readValue(\r\n+\t\t\tjsonStrProduct,\r\n+\t\t\tnew TypeReference<List<Product>>() {}\r\n+\t\t);\r\n+\t\tSystem.out.println(productList);\r\n+\t\tmodel.addAttribute(\"productList\", productList);\r\n \t\treturn \"public/productList\";\r\n \t}\r\n \t@GetMapping(\"/category/{code}/{id}\")\r\n \tpublic String getProductByCategory(@PathVariable String code, @PathVariable Integer id) {\r\n"
                },
                {
                    "date": 1651748164476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,21 +77,21 @@\n \t\t);\r\n \t\tSystem.out.println(productList);\r\n \t\tmodel.addAttribute(\"productList\", productList);\r\n \t\t\r\n-\t\tHttpRequest requestProduct = HttpRequest\r\n+\t\tHttpRequest requestP = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/publisher\"))\r\n \t\t\t.build();\r\n-\t\tHttpResponse<String> responseProduct = clientProduct.send(\r\n-\t\t\trequestProduct,\r\n+\t\tHttpResponse<String> responseP = clientP.send(\r\n+\t\t\trequestP,\r\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n-\t\tString jsonStrProduct = responseProduct.body();\r\n-\t\tObjectMapper objectMapperProduct = new ObjectMapper();\r\n-\t\tList<Product> productList = objectMapperProduct.readValue(\r\n-\t\t\tjsonStrProduct,\r\n-\t\t\tnew TypeReference<List<Product>>() {}\r\n+\t\tString jsonStrP = responseP.body();\r\n+\t\tObjectMapper objectMapperP = new ObjectMapper();\r\n+\t\tList<P> productList = objectMapperP.readValue(\r\n+\t\t\tjsonStrP,\r\n+\t\t\tnew TypeReference<List<P>>() {}\r\n \t\t);\r\n \t\tSystem.out.println(productList);\r\n \t\tmodel.addAttribute(\"productList\", productList);\r\n \t\treturn \"public/productList\";\r\n"
                },
                {
                    "date": 1651748191076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,24 +77,24 @@\n \t\t);\r\n \t\tSystem.out.println(productList);\r\n \t\tmodel.addAttribute(\"productList\", productList);\r\n \t\t\r\n-\t\tHttpRequest requestP = HttpRequest\r\n+\t\tHttpRequest requestPublisher = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/publisher\"))\r\n \t\t\t.build();\r\n-\t\tHttpResponse<String> responseP = clientP.send(\r\n-\t\t\trequestP,\r\n+\t\tHttpResponse<String> responsePublisher = clientPublisher.send(\r\n+\t\t\trequestPublisher,\r\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n-\t\tString jsonStrP = responseP.body();\r\n-\t\tObjectMapper objectMapperP = new ObjectMapper();\r\n-\t\tList<P> productList = objectMapperP.readValue(\r\n-\t\t\tjsonStrP,\r\n-\t\t\tnew TypeReference<List<P>>() {}\r\n+\t\tString jsonStrPublisher = responsePublisher.body();\r\n+\t\tObjectMapper objectMapperPublisher = new ObjectMapper();\r\n+\t\tList<Publisher> productList = objectMapperPublisher.readValue(\r\n+\t\t\tjsonStrPublisher,\r\n+\t\t\tnew TypeReference<List<Publisher>>() {}\r\n \t\t);\r\n-\t\tSystem.out.println(productList);\r\n-\t\tmodel.addAttribute(\"productList\", productList);\r\n+\t\tSystem.out.println(publisherList);\r\n+\t\tmodel.addAttribute(\"publisherList\", publisherList);\r\n \t\treturn \"public/productList\";\r\n \t}\r\n \t@GetMapping(\"/category/{code}/{id}\")\r\n \tpublic String getProductByCategory(@PathVariable String code, @PathVariable Integer id) {\r\n"
                },
                {
                    "date": 1651748684058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,8 @@\n \t\treturn \"public/index\";\r\n \t}\r\n \t@GetMapping(\"/category\")\r\n \tpublic String getAllProduct(Model model) throws IOException, InterruptedException, JsonProcessingException {\r\n-\t\tHttpClient clientProduct = HttpClient.newHttpClient();\r\n \t\tHttpClient clientCategory = HttpClient.newHttpClient();\r\n \t\tHttpRequest requestCategory = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/categories\"))\r\n@@ -60,8 +59,9 @@\n \t\t);\r\n \t\tSystem.out.println(categoryList);\r\n \t\tmodel.addAttribute(\"categoryList\", categoryList);\r\n \t\t\r\n+\t\tHttpClient clientProduct = HttpClient.newHttpClient();\r\n \t\tHttpRequest requestProduct = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/available\"))\r\n \t\t\t.build();\r\n@@ -77,8 +77,9 @@\n \t\t);\r\n \t\tSystem.out.println(productList);\r\n \t\tmodel.addAttribute(\"productList\", productList);\r\n \t\t\r\n+\t\tHttpClient clientPublisher = HttpClient.newHttpClient();\r\n \t\tHttpRequest requestPublisher = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/publisher\"))\r\n \t\t\t.build();\r\n@@ -87,14 +88,32 @@\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n \t\tString jsonStrPublisher = responsePublisher.body();\r\n \t\tObjectMapper objectMapperPublisher = new ObjectMapper();\r\n-\t\tList<Publisher> productList = objectMapperPublisher.readValue(\r\n+\t\tList<String> publisherList = objectMapperPublisher.readValue(\r\n \t\t\tjsonStrPublisher,\r\n-\t\t\tnew TypeReference<List<Publisher>>() {}\r\n+\t\t\tnew TypeReference<List<String>>() {}\r\n \t\t);\r\n \t\tSystem.out.println(publisherList);\r\n \t\tmodel.addAttribute(\"publisherList\", publisherList);\r\n+\t\t\r\n+\t\tHttpClient clientPublisher = HttpClient.newHttpClient();\r\n+\t\tHttpRequest requestPublisher = HttpRequest\r\n+\t\t\t.newBuilder()\r\n+\t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/number\"))\r\n+\t\t\t.build();\r\n+\t\tHttpResponse<String> responsePublisher = clientPublisher.send(\r\n+\t\t\trequestPublisher,\r\n+\t\t\tHttpResponse.BodyHandlers.ofString()\r\n+\t\t);\r\n+\t\tString jsonStrPublisher = responsePublisher.body();\r\n+\t\tObjectMapper objectMapperPublisher = new ObjectMapper();\r\n+\t\tList<String> publisherList = objectMapperPublisher.readValue(\r\n+\t\t\tjsonStrPublisher,\r\n+\t\t\tnew TypeReference<List<String>>() {}\r\n+\t\t);\r\n+\t\tSystem.out.println(publisherList);\r\n+\t\tmodel.addAttribute(\"publisherList\", publisherList);\r\n \t\treturn \"public/productList\";\r\n \t}\r\n \t@GetMapping(\"/category/{code}/{id}\")\r\n \tpublic String getProductByCategory(@PathVariable String code, @PathVariable Integer id) {\r\n"
                },
                {
                    "date": 1651748710337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,21 +95,21 @@\n \t\t);\r\n \t\tSystem.out.println(publisherList);\r\n \t\tmodel.addAttribute(\"publisherList\", publisherList);\r\n \t\t\r\n-\t\tHttpClient clientPublisher = HttpClient.newHttpClient();\r\n-\t\tHttpRequest requestPublisher = HttpRequest\r\n+\t\tHttpClient clientCountProduct = HttpClient.newHttpClient();\r\n+\t\tHttpRequest requestCountProduct = HttpRequest\r\n \t\t\t.newBuilder()\r\n \t\t\t.uri(URI.create(\"http://localhost:8080/apis/products/number\"))\r\n \t\t\t.build();\r\n-\t\tHttpResponse<String> responsePublisher = clientPublisher.send(\r\n-\t\t\trequestPublisher,\r\n+\t\tHttpResponse<String> responseCountProduct = clientCountProduct.send(\r\n+\t\t\trequestCountProduct,\r\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n-\t\tString jsonStrPublisher = responsePublisher.body();\r\n-\t\tObjectMapper objectMapperPublisher = new ObjectMapper();\r\n-\t\tList<String> publisherList = objectMapperPublisher.readValue(\r\n-\t\t\tjsonStrPublisher,\r\n+\t\tString jsonStrCountProduct = responseCountProduct.body();\r\n+\t\tObjectMapper objectMapperCountProduct = new ObjectMapper();\r\n+\t\tList<String> publisherList = objectMapperCountProduct.readValue(\r\n+\t\t\tjsonStrCountProduct,\r\n \t\t\tnew TypeReference<List<String>>() {}\r\n \t\t);\r\n \t\tSystem.out.println(publisherList);\r\n \t\tmodel.addAttribute(\"publisherList\", publisherList);\r\n"
                },
                {
                    "date": 1651748722172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n \t\tString jsonStrCountProduct = responseCountProduct.body();\r\n \t\tObjectMapper objectMapperCountProduct = new ObjectMapper();\r\n \t\tList<String> publisherList = objectMapperCountProduct.readValue(\r\n \t\t\tjsonStrCountProduct,\r\n-\t\t\tnew TypeReference<List<String>>() {}\r\n+\t\t\tInteger.class\r\n \t\t);\r\n \t\tSystem.out.println(publisherList);\r\n \t\tmodel.addAttribute(\"publisherList\", publisherList);\r\n \t\treturn \"public/productList\";\r\n"
                },
                {
                    "date": 1651748727678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n \t\tString jsonStrCountProduct = responseCountProduct.body();\r\n \t\tObjectMapper objectMapperCountProduct = new ObjectMapper();\r\n-\t\tList<String> publisherList = objectMapperCountProduct.readValue(\r\n+\t\tInteger publisherList = objectMapperCountProduct.readValue(\r\n \t\t\tjsonStrCountProduct,\r\n \t\t\tInteger.class\r\n \t\t);\r\n \t\tSystem.out.println(publisherList);\r\n"
                },
                {
                    "date": 1651748737931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,14 +106,14 @@\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n \t\tString jsonStrCountProduct = responseCountProduct.body();\r\n \t\tObjectMapper objectMapperCountProduct = new ObjectMapper();\r\n-\t\tInteger publisherList = objectMapperCountProduct.readValue(\r\n+\t\tInteger tota = objectMapperCountProduct.readValue(\r\n \t\t\tjsonStrCountProduct,\r\n \t\t\tInteger.class\r\n \t\t);\r\n-\t\tSystem.out.println(publisherList);\r\n-\t\tmodel.addAttribute(\"publisherList\", publisherList);\r\n+\t\tSystem.out.println(tota);\r\n+\t\tmodel.addAttribute(\"tota\", tota);\r\n \t\treturn \"public/productList\";\r\n \t}\r\n \t@GetMapping(\"/category/{code}/{id}\")\r\n \tpublic String getProductByCategory(@PathVariable String code, @PathVariable Integer id) {\r\n"
                },
                {
                    "date": 1651748743589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,14 +106,14 @@\n \t\t\tHttpResponse.BodyHandlers.ofString()\r\n \t\t);\r\n \t\tString jsonStrCountProduct = responseCountProduct.body();\r\n \t\tObjectMapper objectMapperCountProduct = new ObjectMapper();\r\n-\t\tInteger tota = objectMapperCountProduct.readValue(\r\n+\t\tInteger totalItems = objectMapperCountProduct.readValue(\r\n \t\t\tjsonStrCountProduct,\r\n \t\t\tInteger.class\r\n \t\t);\r\n-\t\tSystem.out.println(tota);\r\n-\t\tmodel.addAttribute(\"tota\", tota);\r\n+\t\tSystem.out.println(totalItems);\r\n+\t\tmodel.addAttribute(\"totalItems\", totalItems);\r\n \t\treturn \"public/productList\";\r\n \t}\r\n \t@GetMapping(\"/category/{code}/{id}\")\r\n \tpublic String getProductByCategory(@PathVariable String code, @PathVariable Integer id) {\r\n"
                }
            ],
            "date": 1651746433274,
            "name": "Commit-0",
            "content": "package io.sfer.xxx.Controller;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.core.type.TypeReference;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport io.sfer.xxx.Model.Category;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URI;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.util.List;\r\n\r\n@Controller\r\npublic class HomeController {\r\n\t@GetMapping(\"/\")\r\n\tpublic String home(Model model) throws IOException, InterruptedException, JsonProcessingException {\r\n\t\tHttpClient clientCategory = HttpClient.newHttpClient();\r\n\t\tHttpRequest requestCategory = HttpRequest\r\n\t\t\t.newBuilder()\r\n\t\t\t.uri(URI.create(\"http://localhost:8080/apis/categories\"))\r\n\t\t\t.build();\r\n\t\tHttpResponse<String> response = clientCategory.send(\r\n\t\t\trequestCategory,\r\n\t\t\tHttpResponse.BodyHandlers.ofString()\r\n\t\t);\r\n\t\tString jsonStr = response.body();\r\n\t\tObjectMapper objectMapper = new ObjectMapper();\r\n\t\tList<Category> categoryList = objectMapper.readValue(\r\n\t\t\tjsonStr,\r\n\t\t\tnew TypeReference<List<Category>>() {}\r\n\t\t);\r\n\t\tSystem.out.println(categoryList);\r\n\t\tmodel.addAttribute(\"categoryList\", categoryList);\r\n\t\treturn \"public/index\";\r\n\t}\r\n\t@GetMapping(\"/category\")\r\n\tpublic String getAllProduct() {\r\n\t\tHttpClient clientCategory = HttpClient.newHttpClient();\r\n\t\tHttpRequest requestCategory = HttpRequest\r\n\t\t\t.newBuilder()\r\n\t\t\t.uri(URI.create(\"http://localhost:8080/apis/produ\"))\r\n\t\t\t.build();\r\n\t\tHttpResponse<String> response = clientCategory.send(\r\n\t\t\trequestCategory,\r\n\t\t\tHttpResponse.BodyHandlers.ofString()\r\n\t\t);\r\n\t\tString jsonStr = response.body();\r\n\t\tObjectMapper objectMapper = new ObjectMapper();\r\n\t\tList<Category> categoryList = objectMapper.readValue(\r\n\t\t\tjsonStr,\r\n\t\t\tnew TypeReference<List<Category>>() {}\r\n\t\t);\r\n\t\tSystem.out.println(categoryList);\r\n\t\tmodel.addAttribute(\"categoryList\", categoryList);\r\n\t\treturn \"public/productList\";\r\n\t}\r\n\t@GetMapping(\"/category/{code}/{id}\")\r\n\tpublic String getProductByCategory(@PathVariable String code, @PathVariable Integer id) {\r\n\t\t\r\n\t\treturn \"public/productList\";\r\n\t}\r\n\t@GetMapping(\"/blog\")\r\n\tpublic String getBlog() {\r\n\t\treturn \"public/blog\";\r\n\t}\r\n\t@GetMapping(\"/about\")\r\n\tpublic String getAbout() {\r\n\t\treturn \"public/about\";\r\n\t}\r\n\t@GetMapping(\"/contact\")\r\n\tpublic String getContact() {\r\n\t\treturn \"public/contact\";\r\n\t}\r\n\t@GetMapping(\"/cart\")\r\n\tpublic String getCart() {\r\n\t\treturn \"customer/cart\";\r\n\t}\r\n\t\r\n}\r\n"
        }
    ]
}